syntax = "proto3";
package Game.Common;


// 主命令.
enum MAINID
{
    MAIN_MESSAGE_CLIENT_ID_BEGIN               = 0;

    MAIN_MESSAGE_CLIENT_TO_PROXY               = 1;
    MAIN_MESSAGE_CLIENT_TO_HALL                = 2;
    MAIN_MESSAGE_CLIENT_TO_GAME_SERVER         = 3;
    MAIN_MESSAGE_CLIENT_TO_GAME_LOGIC          = 4;

    MAIN_MESSAGE_PROXY_TO_HALL                 = 5;
    MAIN_MESSAGE_HALL_TO_PROXY                 = 6;
    MAIN_MESSAGE_PROXY_TO_GAME_SERVER          = 7;
    MAIN_MESSAGE_GAME_SERVER_TO_PROXY          = 8;

    MAIN_MESSAGE_HTTP_TO_SERVER                = 9;
    MAIN_MESSAGE_CLIENT_TO_MATCH_SERVER        = 10;
}

enum MESSAGE_CLIENT_TO_SERVER_SUBID
{
    MESSAGE_CLIENT_TO_SERVER_SUBID_BEGIN        = 0;

    KEEP_ALIVE_REQ                              = 1;                    // 心跳包                  Game.Common.KeepAliveMessage
    KEEP_ALIVE_RES                              = 2;                    // 心跳包返回               Game.Common.KeepAliveMessageResponse
}

enum MESSAGE_CLIENT_TO_PROXY_SUBID
{
    MESSAGE_CLIENT_TO_PROXY_SUBID_BEGIN                   = 0;

    CLIENT_TO_PROXY_GET_AES_KEY_MESSAGE_REQ               = 3;                      // 协商密钥             ProxyServer.Message.GetAESKeyMessage
    CLIENT_TO_PROXY_GET_AES_KEY_MESSAGE_RES               = 4;                      // 协商密钥返回          ProxyServer.Message.GetAESKeyMessageResponse

    CLIENT_TO_PROXY_BIND_USER_CONNECTION_MESSAGE_REQ      = 5;                      // 绑定大厅链接信息         Game.Common.ProxyBindUserConnectionMessage
    CLIENT_TO_PROXY_BIND_USER_CONNECTION_MESSAGE_RES      = 6;                      // 绑定大厅链接信息返回      Game.Common.ProxyBindUserConnectionMessageResponse

    CLIENT_TO_PROXY_BIND_GAME_SERVER_MESSAGE_REQ          = 7;                      // Bind GameServer       Game.Common.ProxyBindGameServerMessage
    CLIENT_TO_PROXY_BIND_GAME_SERVER_MESSAGE_RES          = 8;                      // Bind GameServer       Game.Common.ProxyBindGameServerMessageResponse

    PROXY_NOTIFY_SHUTDOWN_USER_CLIENT_MESSAGE_NOTIFY      = 9;                      // 在其他地方登陆 Game.Common.ProxyNotifyShutDownUserClientMessage
    PROXY_NOTIFY_PUBLIC_NOTICE_MESSAGE_NOTIFY             = 10;                     //  ProxyServer.Message.NotifyNoticeMessageFromProxyServerMessage
    PROXY_NOTIFY_USER_ORDER_SCORE_MESSAGE                 = 11;                     // 玩家上下分消息 ProxyNotifyOrderScoreMessage
	PROXY_NOTIFY_FAILED_MESSAGE                           = 12;
}

enum MESSAGE_CLIENT_TO_HALL_SUBID
{
    MESSAGE_CLIENT_TO_HALL_SUBID_BEGIN                     = 0;

    CLIENT_TO_HALL_LOGIN_MESSAGE_REQ                       = 3;                     // 账号登录              HallServer.LoginMessage
    CLIENT_TO_HALL_LOGIN_MESSAGE_RES                       = 4;                     // 账号登录返回           HallServer.LoginMessageResponse

    CLIENT_TO_HALL_GET_GAME_ROOM_INFO_REQ                  = 5;                     // 取游戏信息             HallServer.GetGameMessage
    CLIENT_TO_HALL_GET_GAME_ROOM_INFO_RES                  = 6;                     // 返回游戏信息           HallServer.GetGameMessageResponse

    CLIENT_TO_HALL_GET_GAME_SERVER_MESSAGE_REQ             = 7;                     //  获取游戏IP             HallServer.GetGameServerMessage
    CLIENT_TO_HALL_GET_GAME_SERVER_MESSAGE_RES             = 8;                     //  返回游戏IP             HallServer.GetGameServerMessageResponse

    CLIENT_TO_HALL_GET_PLAYING_GAME_INFO_MESSAGE_REQ       = 9;                     // GET PLAYING GAME INFO REQUESS        HallServer.GetPlayingGameInfoMessage
    CLIENT_TO_HALL_GET_PLAYING_GAME_INFO_MESSAGE_RES       = 10;                    // GET PLAYING GAME INFO RESPONSE       HallServer.GetPlayingGameInfoMessageResponse

    CLIENT_TO_HALL_SET_HEAD_MESSAGE_REQ                    = 11;                    // SET HEAD REQUESS        HallServer.SetHeadIdMessage
    CLIENT_TO_HALL_SET_HEAD_MESSAGE_RES                    = 12;                    // SET HEAD RESPONSE       HallServer.SetHeadIdMessageResponse

    CLIENT_TO_HALL_SET_NICKNAME_MESSAGE_REQ                = 13;                    // SET NICKNAME REQUESS   HallServer.SetNickNameMessage
    CLIENT_TO_HALL_SET_NICKNAME_MESSAGE_RES                = 14;                    // SET NICKNAME RESPONSE  HallServer.SetNickNameMessageResponse

    CLIENT_TO_HALL_GET_USER_SCORE_MESSAGE_REQ              = 15;                    // 请求分值改变           Game.Common.GetUserScoreMessage
    CLIENT_TO_HALL_GET_USER_SCORE_MESSAGE_RES              = 16;                    // 返回分值改变           Game.Common.GetUserScoreMessageResponse

    CLIENT_TO_HALL_GET_PLAY_RECORD_REQ                     = 17;                  // 请求玩家的游戏记录列表   HallServer.GetPlayRecordMessage
    CLIENT_TO_HALL_GET_PLAY_RECORD_RES                     = 18;                  // 返回玩家的游戏记录列表    HallServer.GetPlayRecordMessageResponse

    CLIENT_TO_HALL_GET_ROOM_PLAYER_NUM_REQ                  = 19;                   // 取房间人数             HallServer.GetServerPlayerNum
    CLIENT_TO_HALL_GET_ROOM_PLAYER_NUM_RES                  = 20;                   // 返回房间人数           HallServer.GetServerPlayerNumResponse

    CLIENT_TO_HALL_GET_MATCH_ROOM_INFO_REQ                  = 21;                     // 取信息                HallServer.GetMatchMessage
    CLIENT_TO_HALL_GET_MATCH_ROOM_INFO_RES                  = 22;                     // 返回游戏信息           HallServer.GetMatchMessageResponse

    CLIENT_TO_HALL_GET_MATCH_RECORD_REQ                     = 23;                   //请求比赛记录             HallServer.GetMatchRecordMessage
    CLIENT_TO_HALL_GET_MATCH_RECORD_RES                     = 24;                   //返回比赛记录             HallServer.GetMatchRecordResponse

    CLIENT_TO_HALL_GET_MATCH_BEST_RECORD_REQ                = 25;                   //请求比赛记录             HallServer.GetMatchBestRecordMessage
    CLIENT_TO_HALL_GET_MATCH_BEST_RECORD_RES                = 26;                   //返回比赛记录             HallServer.GetMatchBestRecordResponse

    //幸运游戏
    CLIENT_TO_HALL_GET_LUCKY_GAME_REQ                       = 27;                   //请求转盘结果             HallServer.GetLuckyGameRequest
    CLIENT_TO_HALL_GET_LUCKY_GAME_RES                       = 28;                   //返回转盘结果             HallServer.GetLuckyGameResponse
    CLIENT_TO_HALL_SWICTH_LUCKY_GAME_REQ                      = 29;                   //请求开始转盘             HallServer.GetSwitchLuckyGameRequest
    CLIENT_TO_HALL_SWICTH_LUCKY_GAME_RES                      = 30;                   //返回请求结果             HallServer.GetSwitchLuckyGameResponse

    // Task 
    CLIENT_TO_HALL_GET_TASK_LIST_REQ                            = 31;                       //请求玩家任务列表      ReqGetUserTask
    CLIENT_TO_HALL_GET_TASK_LIST_RES                            = 32;                       //请求玩家任务列表返回      ResGetUserTask
    CLIENT_TO_HALL_GET_AWARDS_REQ                               = 33;                       //请求领取任务奖励      ReqGetTaskRewards
    CLIENT_TO_HALL_GET_AWARDS_RES                               = 34;                       //请求领取任务奖励返回      ResGetTaskReward

    CLIENT_TO_HALL_GET_RECORD_DETAIL_REQ                     = 35;                  // 请求当局游戏记录详情   HallServer.GetRecordDetailMessage
    CLIENT_TO_HALL_GET_RECORD_DETAIL_RES                     = 36;                  // 返回当局游戏记录详情   HallServer.GetRecordDetailResponse

    CLIENT_TO_HALL_GET_MATCHRECORD_DETAIL_REQ                = 37;                  // 请求当局游戏记录详情   HallServer.GetMatchRecordDetailMessage
    CLIENT_TO_HALL_GET_MATCHRECORD_DETAIL_RES                = 38;                  // 返回当局游戏记录详情   HallServer.GetMatchRecordDetailResponse	
/*
    CLIENT_TO_HALL_GET_RANDOM_NICKNAME_MESSAGE_REQ         = 111;                  // GET NICKNAME REQUEST   HallServer.GetRandomNickNameMessage
    CLIENT_TO_HALL_GET_RANDOM_NICKNAME_MESSAGE_RES         = 112;                 // GET NICKNAME RESPONSE  HallServer.GetRandomNickNameMessageResponse
    CLIENT_TO_HALL_EXCHANGE_SCORE_TO_RMB_MESSAGE_REQ       = 115;                  // 积分兑换              HallServer.ExchangeScoreToRMBMessage
    CLIENT_TO_HALL_EXCHANGE_SCORE_TO_RMB_MESSAGE_RES       = 116;                  // 兑换返回              HallServer.ExchangeScoreToRMBMessageResponse

    CLIENT_TO_HALL_UPDATE_USER_SCORE_MESSAGE_REQ           = 119;                  // 大厅主动刷新玩家积分     GetUpdateUserScoreMessage
    CLIENT_TO_HALL_UPDATE_USER_SCORE_MESSAGE_RES           = 120;                  // 主动刷新返回            GetUpdateUserScoreResponse

    CLIENT_TO_HALL_GET_DIALOG_BOX_NOTICE_MESSAGE_REQ       = 121;                 //获取弹框消息       GetDialogBoxNoticeMessage
    CLIENT_TO_HALL_GET_DIALOG_BOX_NOTICE_MESSAGE_RES       = 122;                 //获取弹框消息       GetDialogBoxNoticeMessageResponse


    CLIENT_TO_HALL_GET_PLAYBACK_COLLECT_REQ                = 125;                  //获取回放列表            GamePlaybackCollectRequest
    CLIENT_TO_HALL_GET_PLAYBACK_COLLECT_RES                = 126;                  //返回回放列表            GamePlaybackCollectResponse

    CLIENT_TO_HALL_GET_PLAYBACK_DETAIL_REQ                 = 127;                  //获取回放明细记录          GamePlaybackDetailRequest
    CLIENT_TO_HALL_GET_PLAYBACK_DETAIL_RES                 = 128;                  //返回回放明细记录          GamePlaybackDetailResponse
*/

}

//===================俱乐部==================
enum MESSAGE_CLIENT_TO_HALL_CLUB_SUBID
{
    MESSAGE_CLIENT_TO_HALL_CLUB_SUBID_BEGIN                       = 0;

    CLIENT_TO_HALL_CLUB_GET_GAME_SERVER_MESSAGE_REQ               = 3;      // 获取游戏服务器IP ClubHallServer.GetGameServerMessage
    CLIENT_TO_HALL_CLUB_GET_GAME_SERVER_MESSAGE_RES               = 4;      // 返回游戏服务器IP ClubHallServer.GetGameServerMessageResponse

    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_GAME_MESSAGE_REQ              = 5;      // 获取我的俱乐部 游戏部分  ClubHallServer.GetMyClubGameMessage
    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_GAME_MESSAGE_RES              = 6;      // 获取我的俱乐部 游戏部分  ClubHallServer.GetMyClubGameMessageResponse

    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_HALL_MESSAGE_REQ              = 11;     // 获取我的俱乐部  ClubHallServer.GetMyClubHallMessage
    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_HALL_MESSAGE_RES              = 12;     // 获取我的俱乐部  ClubHallServer.GetMyClubHallMessageResponse

    CLIENT_TO_HALL_CLUB_JOIN_THE_CLUB_MESSAGE_REQ                 = 13;     // 加入俱乐部  ClubHallServer.JoinTheClubMessage
    CLIENT_TO_HALL_CLUB_JOIN_THE_CLUB_MESSAGE_RES                 = 14;     // 加入俱乐部  ClubHallServer.JoinTheClubMessageResponse

    CLIENT_TO_HALL_CLUB_EXIT_THE_CLUB_MESSAGE_REQ                 = 15;     // 退出俱乐部  ClubHallServer.ExitTheClubMessage
    CLIENT_TO_HALL_CLUB_EXIT_THE_CLUB_MESSAGE_RES                 = 16;     // 退出俱乐部  ClubHallServer.ExitTheClubMessageResponse


    CLIENT_TO_HALL_CLUB_SET_AUTO_BECOME_PARTNER_MESSAGE_REQ       = 21;     // 设置是否开启自动成为合伙人  ClubHallServer.SetAutoBecomePartnerMessage
    CLIENT_TO_HALL_CLUB_SET_AUTO_BECOME_PARTNER_MESSAGE_RES       = 22;     // 设置是否开启自动成为合伙人  ClubHallServer.SetAutoBecomePartnerMessageResponse

    CLIENT_TO_HALL_CLUB_BECOME_PARTNER_MESSAGE_REQ                = 23;     // 成为合伙人  ClubHallServer.BecomePartnerMessage
    CLIENT_TO_HALL_CLUB_BECOME_PARTNER_MESSAGE_RES                = 24;     // 成为合伙人  ClubHallServer.BecomePartnerMessageResponse

    CLIENT_TO_HALL_CLUB_EXCHANGE_MY_REVENUE_REQ                   = 25;     // 佣金兑换金币 ClubHallServer.ExchangeRevenueMessage
    CLIENT_TO_HALL_CLUB_EXCHANGE_MY_REVENUE_RES                   = 26;     // 佣金兑换金币 ClubHallServer.ExchangeRevenueMessageResponse

    CLIENT_TO_HALL_CLUB_GET_EXCHANGE_MY_REVENUE_RECORD_REQ        = 31;     // 获取佣金提取记录     ClubHallServer.GetExchangeRevenueRecordMessage
    CLIENT_TO_HALL_CLUB_GET_EXCHANGE_MY_REVENUE_RECORD_RES        = 32;     // 返回佣金提取记录结果  ClubHallServer.GetExchangeRevenueRecordMessageResponse

    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_REQ                    = 33;     // 获取我的业绩 ClubHallServer.GetMyAchievementMessage
    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_RES                    = 34;     // 返回我的业绩 ClubHallServer.GetMyAchievementMessageResponse

    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_DETAIL_MEMBER_REQ      = 35;     // 获取会员业绩详情 ClubHallServer.GetAchievementDetailMemberMessage
    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_DETAIL_MEMBER_RES      = 36;     // 返回会员业绩详情结果 ClubHallServer.GetAchievementDetailMemberMessage

    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_DETAIL_PARTNER_REQ     = 41;     // 获取合伙人业绩详情 ClubHallServer.GetAchievementDetailPartnerMessage
    CLIENT_TO_HALL_CLUB_GET_MY_ACHIEVEMENT_DETAIL_PARTNER_RES     = 42;     // 返回合伙人业绩详情结果 ClubHallServer.GetAchievementDetailPartnerMessage

    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_REQ                           = 43;     // 获取俱乐部内我的团队我的俱乐部 ClubHallServer.GetMyClubMessage
    CLIENT_TO_HALL_CLUB_GET_MY_CLUB_RES                           = 44;     // 返回俱乐部内我的团队我的俱乐部 ClubHallServer.GetMyClubMessageResponse

    CLIENT_TO_HALL_CLUB_GET_MY_TEAM_REQ                           = 51;     // 获取我的团队成员 ClubHallServer.GetMyTeamMessage
    CLIENT_TO_HALL_CLUB_GET_MY_TEAM_RES                           = 52;     // 返回我的团队成员 ClubHallServer.GetMyTeamMessageResponse

    CLIENT_TO_HALL_CLUB_SET_SUBORDINATE_RATE_REQ                  = 53;     // 设置下一级合伙人提成比例     ClubHallServer.SetSubordinateRateMessage
    CLIENT_TO_HALL_CLUB_SET_SUBORDINATE_RATE_RES                  = 54;     // 返回设置下一级合伙人提成比例  ClubHallServer.SetSubordinateRateMessageResponse

    CLIENT_TO_HALL_CLUB_GET_PLAY_RECORD_REQ                       = 55;     // 获取游戏明细记录  ClubHallServer.GetPlayRecordMessage
    CLIENT_TO_HALL_CLUB_GET_PLAY_RECORD_RES                       = 56;     // 获取游戏明细记录  ClubHallServer.GetPlayRecordMessageResponse

    CLIENT_TO_HALL_CLUB_GET_ALL_PLAY_RECORD_REQ                   = 61;     // 获取玩家俱乐部所有游戏记录列表   ClubHallServer.GetAllPlayRecordMessage
    CLIENT_TO_HALL_CLUB_GET_ALL_PLAY_RECORD_RES                   = 62;     // 返回玩家俱乐部所有游戏记录列表   ClubHallServer.GetAllPlayRecordMessageResponse

    CLIENT_TO_HALL_CLUB_GET_USER_SCORE_CHANGE_RECORD_REQ          = 63;     // 获取玩家账户明细列表   ClubHallServer.GetUserScoreChangeRecordMessage
    CLIENT_TO_HALL_CLUB_GET_USER_SCORE_CHANGE_RECORD_RES          = 64;     // 返回玩家账户明细列表   ClubHallServer.GetUserScoreChangeRecordMessageResponse

    CLIENT_TO_HALL_CLUB_GET_CLUB_PROMOTER_REQ                     = 65;     // 我的上级信息  ClubHallServer.GetClubPromoterInfoMessage
    CLIENT_TO_HALL_CLUB_GET_CLUB_PROMOTER_RES                     = 66;     // 我的上级信息  ClubHallServer.GetClubPromoterInfoMessageResponse

    CLIENT_TO_HALL_CLUB_FIRE_MEMBER_REQ                           = 71;     // 开除此用户  ClubHallServer.FireMemberMessage
    CLIENT_TO_HALL_CLUB_FIRE_MEMBER_RES                           = 72;     // 开除此用户  ClubHallServer.FireMemberMessageResponse


    CLIENT_TO_HALL_CLUB_GET_APPLY_CLUB_QQ_REQ                     = 73;     // 获取俱乐部申请QQ  ClubHallServer.GetApplyClubQQMessage
    CLIENT_TO_HALL_CLUB_GET_APPLY_CLUB_QQ_RES                     = 74;     // 获取俱乐部申请QQ  ClubHallServer.GetApplyClubQQMessage


}

enum MESSAGE_CLIENT_TO_GAME_SERVER_SUBID
{
    A = 0;
}

enum MESSAGE_CLIENT_TO_GAME_LOGIC_SUBID
{
    B = 0;
}

enum MESSAGE_PROXY_TO_HALL_SUBID
{
    HALL_ON_USER_OFFLINE                                   = 0;                  // 玩家已经从大厅服务器上掉线 客户端不用管 HallServer.HallOnUserOfflineMessage.
}

enum MESSAGE_HALL_TO_PROXY_SUBID
{
    D = 0;
}

enum MESSAGE_PROXY_TO_GAME_SERVER_SUBID
{
    GAME_SERVER_ON_USER_OFFLINE                            = 0;
}

enum MESSAGE_GAME_SERVER_TO_PROXY_SUBID
{
    MESSAGE_GAME_SERVER_TO_PROXY_SUBID_BEGIN    = 0;

    PROXY_NOTIFY_KILL_BOSS_MESSAGE_REQ          = 42;                   // GLOABLE kill boss message   Game.Common.ProxyNotifyKillBossMessage

}

enum MESSAGE_HTTP_TO_SERVER_SUBID
{
    MESSAGE_NOTIFY_REPAIR_SERVER                 =0;
}

message Header
{
     int32    sign = 1;            // 包头标示.
}

message KeepAliveMessage
{
     Game.Common.Header     header          = 1;
     string                 session         = 2; //心跳内容
}
message KeepAliveMessageResponse
{
    enum KeepAliveRetCode
    {
        KEEPALIVE_OK                    = 0;
        KEEPALIVE_FAIL                  = 1;
        KEEPALIVE_RELOGIN               = 2;

        KEEPALIVE_UNKNOWN               = 20;
    }

     Game.Common.Header     header                 = 1;
     int32                  retCode                = 2;
     string                 errorMsg               = 3;
}






message ProxyNotifyRechargeScoreMessage
{
     Game.Common.Header     header                 = 1;
     int32                  userId                 = 2; //user ID
     int32                  id                     = 3; //table id
     string                 orderId                = 4; //订单号
     double                 realPay                = 5; //realPay Score
     int32                  status                 = 6; //status
}

message ProxyNotifyShutDownUserClientMessage
{
     Game.Common.Header     header = 1;  // ID
     int32		            userId = 2;
     int32                  status = 3 ; //1后台踢下线 0或者没有重复登入
	 string                 msg = 4;
}

message ProxyNotifyOrderScoreMessage
{
     Game.Common.Header     header = 1;  // ID
     int64		    userId = 2;
     int64                  score  = 3;  //变动后的分数
}

message ProxyNotifyKillBossMessage
{
     Game.Common.Header     header                 = 1;
     string                 msg                    = 2;
}

message ProxyNotifyReenterRoomMessage
{
     Game.Common.Header     header                 = 1;
}

message HallNotifyReLoginServerMessage
{
     Game.Common.Header     header                 = 1;
}

message HttpNotifyRepairServerResp
{
    int32                  status                 = 1;  //1 cannot join 2 stop game
}

message ProxyNotifyFailedMessage {
	Game.Common.Header     header                 = 1;
	int32 mainId = 2;
	int32 subId = 3;
	string msg = 4;
}