syntax = "proto3";
package Game.Rpc;

// option cc_generic_services = true;
option java_generic_services = true;
option py_generic_services = true;

//节点信息
message NodeInfoReq {
	int32 flags = 1;
}
message NodeInfoRsp {
	int32 NumOfLoads = 1;
	string host = 2;
	string domain = 3;
	string NodeValue = 4;
}

//用户积分
message UserScoreReq {
	int64 userId = 1;
	int64 score = 2;
}
message UserScoreRsp {
}

// 获取俱乐部房间信息
message RoomInfoReq
{
    int64  clubId                           = 1;    // 俱乐部Id  0-全部俱乐部时
	int32  gameId                           = 2;    // 游戏Id
    int32  roomId                           = 3;    // 房间Id
    bytes  dynamicPassword                  = 4;    // 动态密码

    int64  curTakeScore                     = 5;    // 梭哈、德州使用当前携带金币
    bool  bAutoSetScore                     = 6;    // 梭哈、德州 设置自动补充金币
}
message UserInfo
{
       int64   userId                      = 1;
       string  nickName                    = 2;
       int32   chairId                     = 3;
       int32   headerId                    = 4;
       int32   headboxId                   = 5;
       string  headImgUrl                  = 6;
}
message TableInfo
{
    int32      tableId                     = 1;
	int32      gameStatus                  = 2;
    repeated UserInfo   userInfo           = 3;
    int64      applyBankerScore            = 4;    // 百人上庄 金币数
    int64      curBankerUserId             = 5;    // 当前庄家Id   -1:系统庄
}
message RoomInfoRsp
{
    int64      clubId                      = 1;    // 俱乐部Id
    int32      gameId                      = 2;    // 游戏Id
    int32      roomId                      = 3;    // 房间Id
	string     servId                      = 4;    // 游戏节点Id
    int32      tableCount                  = 5;    // 空的桌子 = 桌子数量[0,tableCount) - 有人的桌子(除去所有归属当前俱乐部及其他俱乐部)
    repeated TableInfo tableInfos          = 6;    // 有人的桌子 归属当前俱乐部Id
}

service RpcService {
	rpc GetRoomInfo(RoomInfoReq) returns(RoomInfoRsp);
	rpc GetNodeInfo(NodeInfoReq) returns(NodeInfoRsp);
	rpc NotifyUserScore(UserScoreReq) returns(UserScoreRsp);
}